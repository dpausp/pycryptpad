[metadata]
name = pycryptpad-tools
description = Some tools for Cryptpad
version = 2019.10.0.dev
author = dpausp
author_email = dpausp@posteo.de
keywords = pad,cryptpad,api
license = GNU Affero General Public License v3 or later (AGPLv3+)
classifiers =
    License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)
    License :: OSI Approved :: GNU General Public License v3 (GPLv3)
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7

[options]
include_package_data = true
install_requires =
    eliot
    selenium
package_dir =
    = src
    pycryptpad_tools = src/pycryptpad_tools
packages =
    pycryptpad_tools
python_requires = ~=3.7

[options.entry_points]
console_scripts =
    cryptpad-cli = pycryptpad_tools.cli:cli

[options.packages.find]
where=src

[tool:pytest]
addopts =
    --show-capture=no
filterwarnings =
    ignore::DeprecationWarning
testpaths = tests

[pycodestyle]
max_line_length = 140

[coverage:run]
omit =

[coverage:report]
skip_covered = True
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

